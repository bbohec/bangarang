import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, n as noop, y as create_component, z as claim_component, A as mount_component, B as transition_in, C as transition_out, D as destroy_component } from './client.b0c8b10f.js';

/* src\components\unit\Styles\tailwindcss.svelte generated by Svelte v3.31.2 */

function create_fragment(ctx) {
	const block = {
		c: noop,
		l: noop,
		m: noop,
		p: noop,
		i: noop,
		o: noop,
		d: noop
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Tailwindcss", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Tailwindcss> was created with unknown prop '${key}'`);
	});

	return [];
}

class Tailwindcss extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Tailwindcss",
			options,
			id: create_fragment.name
		});
	}
}

/* src\routes\aaaa_layout.svelte generated by Svelte v3.31.2 */

function create_fragment$1(ctx) {
	let tailwindcss;
	let current;
	tailwindcss = new Tailwindcss({ $$inline: true });

	const block = {
		c: function create() {
			create_component(tailwindcss.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(tailwindcss.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(tailwindcss, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(tailwindcss.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(tailwindcss.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(tailwindcss, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Aaaa_layout", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Aaaa_layout> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ Tailwindcss });
	return [];
}

class Aaaa_layout extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Aaaa_layout",
			options,
			id: create_fragment$1.name
		});
	}
}

export default Aaaa_layout;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWFhYV9sYXlvdXQuZTc3MDZlYjUuanMiLCJzb3VyY2VzIjpbXSwic291cmNlc0NvbnRlbnQiOltdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
