import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, H as validate_each_argument, v as validate_slots, e as element, t as text, l as space, I as empty, c as claim_element, a as children, b as claim_text, f as detach_dev, m as claim_space, g as attr_dev, h as add_location, j as insert_dev, k as append_dev, B as transition_in, C as transition_out, K as check_outros, L as destroy_each, y as create_component, z as claim_component, A as mount_component, D as destroy_component, n as noop, J as group_outros } from './client.b0c8b10f.js';
import { L as Link, l as links } from './Link.631f567c.js';
import { V as ViewTitle } from './ViewTitle.207a9030.js';
import { D as DescriptionCard } from './DescriptionCard.df87e8e1.js';

/* src\routes\LeanCanvas.svelte generated by Svelte v3.31.2 */
const file = "src\\routes\\LeanCanvas.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[4] = list[i];
	return child_ctx;
}

// (155:8) {#each leanCanvasPart.sections as section}
function create_each_block_1(ctx) {
	let descriptioncard;
	let current;

	descriptioncard = new DescriptionCard({
			props: {
				descriptionCardContract: /*section*/ ctx[4]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(descriptioncard.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(descriptioncard.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(descriptioncard, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(descriptioncard.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(descriptioncard.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(descriptioncard, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block_1.name,
		type: "each",
		source: "(155:8) {#each leanCanvasPart.sections as section}",
		ctx
	});

	return block;
}

// (153:4) {#each leanCanvas as leanCanvasPart}
function create_each_block(ctx) {
	let h1;
	let t0_value = /*leanCanvasPart*/ ctx[1].partName + "";
	let t0;
	let t1;
	let each_1_anchor;
	let current;
	let each_value_1 = /*leanCanvasPart*/ ctx[1].sections;
	validate_each_argument(each_value_1);
	let each_blocks = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			h1 = element("h1");
			t0 = text(t0_value);
			t1 = space();

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = empty();
			this.h();
		},
		l: function claim(nodes) {
			h1 = claim_element(nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, t0_value);
			h1_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(nodes);
			}

			each_1_anchor = empty();
			this.h();
		},
		h: function hydrate() {
			attr_dev(h1, "class", "text-xl mt-4 text-bangarang-dark font-semibold text-center");
			add_location(h1, file, 153, 8, 5589);
		},
		m: function mount(target, anchor) {
			insert_dev(target, h1, anchor);
			append_dev(h1, t0);
			insert_dev(target, t1, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			insert_dev(target, each_1_anchor, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (dirty & /*leanCanvas*/ 1) {
				each_value_1 = /*leanCanvasPart*/ ctx[1].sections;
				validate_each_argument(each_value_1);
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block_1(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
					}
				}

				group_outros();

				for (i = each_value_1.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;

			for (let i = 0; i < each_value_1.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(h1);
			if (detaching) detach_dev(t1);
			destroy_each(each_blocks, detaching);
			if (detaching) detach_dev(each_1_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(153:4) {#each leanCanvas as leanCanvasPart}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let header;
	let viewtitle;
	let t0;
	let main;
	let t1;
	let footer;
	let link0;
	let t2;
	let link1;
	let current;

	viewtitle = new ViewTitle({
			props: { title: "Bangarang Lean Canvas" },
			$$inline: true
		});

	let each_value = /*leanCanvas*/ ctx[0];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	link0 = new Link({
			props: {
				size: "small",
				linkName: "The Business Model",
				linkHref: links.businessModel
			},
			$$inline: true
		});

	link1 = new Link({
			props: {
				size: "small",
				linkName: "Use Bangarang!",
				linkHref: links.mainMenu
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			header = element("header");
			create_component(viewtitle.$$.fragment);
			t0 = space();
			main = element("main");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t1 = space();
			footer = element("footer");
			create_component(link0.$$.fragment);
			t2 = space();
			create_component(link1.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			header = claim_element(nodes, "HEADER", { class: true });
			var header_nodes = children(header);
			claim_component(viewtitle.$$.fragment, header_nodes);
			header_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			main = claim_element(nodes, "MAIN", { class: true });
			var main_nodes = children(main);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(main_nodes);
			}

			main_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			footer = claim_element(nodes, "FOOTER", { class: true });
			var footer_nodes = children(footer);
			claim_component(link0.$$.fragment, footer_nodes);
			t2 = claim_space(footer_nodes);
			claim_component(link1.$$.fragment, footer_nodes);
			footer_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(header, "class", "flex flex-col");
			add_location(header, file, 148, 0, 5406);
			attr_dev(main, "class", "flex-grow overflow-y-auto");
			add_location(main, file, 151, 0, 5497);
			attr_dev(footer, "class", "flex flex-col");
			add_location(footer, file, 159, 0, 5849);
		},
		m: function mount(target, anchor) {
			insert_dev(target, header, anchor);
			mount_component(viewtitle, header, null);
			insert_dev(target, t0, anchor);
			insert_dev(target, main, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(main, null);
			}

			insert_dev(target, t1, anchor);
			insert_dev(target, footer, anchor);
			mount_component(link0, footer, null);
			append_dev(footer, t2);
			mount_component(link1, footer, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*leanCanvas*/ 1) {
				each_value = /*leanCanvas*/ ctx[0];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(main, null);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(viewtitle.$$.fragment, local);

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			transition_in(link0.$$.fragment, local);
			transition_in(link1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(viewtitle.$$.fragment, local);
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			transition_out(link0.$$.fragment, local);
			transition_out(link1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(header);
			destroy_component(viewtitle);
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(main);
			destroy_each(each_blocks, detaching);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(footer);
			destroy_component(link0);
			destroy_component(link1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("LeanCanvas", slots, []);
	

	const leanCanvas = [
		{
			partName: "Customers",
			sections: [
				{
					title: "Customer Segments",
					description: "List of target customers and users.",
					bulletPoints: ["Anyone that want to give his opinion about a subject."]
				},
				{
					title: "Early Adopters",
					description: "Characteristics list of ideal customers.",
					bulletPoints: ["Syndicates", "Activits", "Team members where there is lot of control"],
					links: [
						{
							name: "Are your a syndicalist?",
							href: links.syndicalistEarlyAdopters
						},
						{
							name: "Are your an activist?",
							href: links.activistEarlyAdopters
						},
						{
							name: "Are your an agile team member?",
							href: links.agileTeamMemberEarlyAdopters
						}
					]
				}
			]
		},
		{
			partName: "Problem",
			sections: [
				{
					title: "",
					description: "List your customer's top 3 problems",
					bulletPoints: [
						"Individuals can't give their opinion anonymously.",
						"Individuals can't give their opinion for subjects that matters to them.",
						"Individuals can't pay for giving their opinion.",
						"Individuals don't want to move for giving their opinion."
					]
				}
			]
		},
		{
			partName: "Unique Value Proposition",
			sections: [
				{
					title: "",
					description: "Single, clear, compelling message that states why Bangarang is different and worth paying attention.",
					bulletPoints: [
						"Provide people sovereignty.",
						"Improve human rights: freedom, equality & justice for all.",
						"Remove power & authority.",
						"Solution with energy efficiency by design."
					]
				}
			]
		},
		{
			partName: "Solution",
			sections: [
				{
					title: "",
					description: "Top features.",
					bulletPoints: [
						"Users can interact with Claims.",
						"User actions are only tracked at the user level.",
						"Anyone can subscribe.",
						"Free."
					]
				}
			]
		},
		{
			partName: "Channels",
			sections: [
				{
					title: "",
					description: "Path list to customers.",
					bulletPoints: [
						"YouTube - Daily Marketing Videos.",
						"Responce to daily news.",
						"Dev/Marketing Transparant Streaming."
					]
				}
			]
		},
		{
			partName: "Revenue Streams",
			sections: [
				{
					title: "",
					description: "Sources of revenue list.",
					bulletPoints: [
						"++ User Support in exchange of being part of credits",
						"-- Organisation Support in exchange of being part of credits",
						"---- Paid features (money give advantage / power)"
					]
				}
			]
		},
		{
			partName: "Cost Structure",
			sections: [
				{
					title: "",
					description: "Fixed and variable costs list.",
					bulletPoints: [
						"One producter > Me > self financing for 7 months 2 days per week > full time 80k/yr and decreasing.",
						"Additionnal producters > bonus or maybe free help > not needed on early stage.",
						"Infrastructure cost > not needed on early stage.",
						"Organizations financial/political/marketing aggressivity."
					]
				}
			]
		},
		{
			partName: "Key Metrics",
			sections: [
				{
					title: "",
					description: "Key activities Bangarang measure.",
					bulletPoints: [
						"Daily votes/ballot.",
						"HOT votes/ballot.",
						"Organisations that are not supporting us :).",
						"People not already registered/voting for HOT vote :)."
					]
				}
			]
		},
		{
			partName: "Unfair Advantage",
			sections: [
				{
					title: "",
					description: "Can't be easily copied or bought.",
					bulletPoints: [
						"Open Source / Transparancy.",
						"Free of use.",
						"Not fully skilled but can do it.",
						"Crazy Dude with crazy ideas :).",
						"Cost effective."
					]
				}
			]
		}
	];

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<LeanCanvas> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({
		Link,
		links,
		ViewTitle,
		DescriptionCard,
		leanCanvas
	});

	return [leanCanvas];
}

class LeanCanvas extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "LeanCanvas",
			options,
			id: create_fragment.name
		});
	}
}

export default LeanCanvas;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
