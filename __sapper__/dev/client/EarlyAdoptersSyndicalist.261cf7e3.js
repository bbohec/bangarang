import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, e as element, y as create_component, l as space, c as claim_element, a as children, z as claim_component, f as detach_dev, m as claim_space, g as attr_dev, h as add_location, j as insert_dev, A as mount_component, k as append_dev, n as noop, B as transition_in, C as transition_out, D as destroy_component } from './client.e7f4e8c3.js';
import { L as Link, l as links } from './Link.9e11749c.js';
import { V as ViewTitle } from './ViewTitle.c60e20d1.js';

/* src\routes\EarlyAdoptersSyndicalist.svelte generated by Svelte v3.31.2 */
const file = "src\\routes\\EarlyAdoptersSyndicalist.svelte";

function create_fragment(ctx) {
	let header;
	let viewtitle;
	let t0;
	let main;
	let t1;
	let footer;
	let link0;
	let t2;
	let link1;
	let current;

	viewtitle = new ViewTitle({
			props: { title: "SYNDICALIST EARLY ADOPTER" },
			$$inline: true
		});

	link0 = new Link({
			props: {
				size: "small",
				linkName: "The Lean Canvas",
				linkHref: links.leanCanvas
			},
			$$inline: true
		});

	link1 = new Link({
			props: {
				size: "small",
				linkName: "Use Bangarang!",
				linkHref: links.mainMenu
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			header = element("header");
			create_component(viewtitle.$$.fragment);
			t0 = space();
			main = element("main");
			t1 = space();
			footer = element("footer");
			create_component(link0.$$.fragment);
			t2 = space();
			create_component(link1.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			header = claim_element(nodes, "HEADER", { class: true });
			var header_nodes = children(header);
			claim_component(viewtitle.$$.fragment, header_nodes);
			header_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			main = claim_element(nodes, "MAIN", { class: true });
			var main_nodes = children(main);
			main_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			footer = claim_element(nodes, "FOOTER", { class: true });
			var footer_nodes = children(footer);
			claim_component(link0.$$.fragment, footer_nodes);
			t2 = claim_space(footer_nodes);
			claim_component(link1.$$.fragment, footer_nodes);
			footer_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(header, "class", "flex flex-col");
			add_location(header, file, 4, 0, 269);
			attr_dev(main, "class", "flex-grow overflow-y-auto");
			add_location(main, file, 7, 0, 364);
			attr_dev(footer, "class", "flex flex-col");
			add_location(footer, file, 10, 0, 417);
		},
		m: function mount(target, anchor) {
			insert_dev(target, header, anchor);
			mount_component(viewtitle, header, null);
			insert_dev(target, t0, anchor);
			insert_dev(target, main, anchor);
			insert_dev(target, t1, anchor);
			insert_dev(target, footer, anchor);
			mount_component(link0, footer, null);
			append_dev(footer, t2);
			mount_component(link1, footer, null);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(viewtitle.$$.fragment, local);
			transition_in(link0.$$.fragment, local);
			transition_in(link1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(viewtitle.$$.fragment, local);
			transition_out(link0.$$.fragment, local);
			transition_out(link1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(header);
			destroy_component(viewtitle);
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(main);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(footer);
			destroy_component(link0);
			destroy_component(link1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("EarlyAdoptersSyndicalist", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<EarlyAdoptersSyndicalist> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ Link, links, ViewTitle });
	return [];
}

class EarlyAdoptersSyndicalist extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "EarlyAdoptersSyndicalist",
			options,
			id: create_fragment.name
		});
	}
}

export default EarlyAdoptersSyndicalist;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRWFybHlBZG9wdGVyc1N5bmRpY2FsaXN0LjI2MWNmN2UzLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcm91dGVzL0Vhcmx5QWRvcHRlcnNTeW5kaWNhbGlzdC5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdCBsYW5nPVwidHNcIj5cclxuICAgIGltcG9ydCBMaW5rIGZyb20gXCIuLi9jb21wb25lbnRzL3VuaXQvTGlua3MvTGluay5zdmVsdGVcIlxyXG4gICAgaW1wb3J0IHsgbGlua3MgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9yb3V0aW5nL2xpbmtzXCI7XHJcbiAgICBpbXBvcnQgVmlld1RpdGxlIGZyb20gXCIuLi9jb21wb25lbnRzL3VuaXQvVGl0bGVzL1ZpZXdUaXRsZS5zdmVsdGVcIlxyXG48L3NjcmlwdD5cclxuPGhlYWRlciBjbGFzcz1cImZsZXggZmxleC1jb2xcIj5cclxuICAgIDxWaWV3VGl0bGUgdGl0bGU9XCJTWU5ESUNBTElTVCBFQVJMWSBBRE9QVEVSXCIvPlxyXG48L2hlYWRlcj5cclxuPG1haW4gY2xhc3M9XCJmbGV4LWdyb3cgb3ZlcmZsb3cteS1hdXRvXCI+XHJcblxyXG48L21haW4+XHJcbjxmb290ZXIgY2xhc3M9XCJmbGV4IGZsZXgtY29sXCI+XHJcbiAgICA8TGluayBzaXplPVwic21hbGxcIiBsaW5rTmFtZT1cIlRoZSBMZWFuIENhbnZhc1wiIGxpbmtIcmVmPXtsaW5rcy5sZWFuQ2FudmFzfS8+XHJcbiAgICA8TGluayBzaXplPVwic21hbGxcIiBsaW5rTmFtZT1cIlVzZSBCYW5nYXJhbmchXCIgbGlua0hyZWY9e2xpbmtzLm1haW5NZW51fS8+XHJcbjwvZm9vdGVyPiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2NBWTRELEtBQUssQ0FBQyxVQUFVOzs7Ozs7Ozs7Y0FDakIsS0FBSyxDQUFDLFFBQVE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
